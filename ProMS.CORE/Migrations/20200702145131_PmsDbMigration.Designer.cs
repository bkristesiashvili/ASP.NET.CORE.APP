// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProMS.CORE.Data;

namespace ProMS.CORE.Migrations
{
    [DbContext(typeof(PmsDbContext))]
    [Migration("20200702145131_PmsDbMigration")]
    partial class PmsDbMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProMS.CORE.Models.Project.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("project_comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("project_create_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Depth")
                        .HasColumnName("project_depth")
                        .HasColumnType("int");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasColumnName("project_folder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnName("project_height")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnName("project_image_path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnName("project_last_modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("project_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orderer")
                        .IsRequired()
                        .HasColumnName("project_orderer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnName("project_width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ProMS.CORE.Models.User.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoB")
                        .IsRequired()
                        .HasColumnName("birth_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasColumnName("phone_num")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("RoleMember")
                        .IsRequired()
                        .HasColumnName("role")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("SkypeContact")
                        .HasColumnName("skype_contact")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoB = "4/24/1989 12:00:00 AM",
                            Email = "besysfx@gmail.com",
                            Firstname = "ბესიკ",
                            Lastname = "ქრისტესიაშვილი",
                            Password = "UJEs6M6$",
                            PhoneNum = "+995595191690",
                            RoleMember = "Admin",
                            SkypeContact = "besusfx",
                            Username = "befx"
                        });
                });

            modelBuilder.Entity("ProMS.CORE.Models.Project.ProjectModel", b =>
                {
                    b.HasOne("ProMS.CORE.Models.User.UserModel", "Author")
                        .WithMany("Projects")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
